@using Domain.Socioboard.Domain;
@using System.Web.Script.Serialization;
@{
    Layout = null;
    string path = @System.Configuration.ConfigurationManager.AppSettings["domain"];
    bool check = true;
    string hrefPost = string.Empty;
}

 @*Edited by Antima*@

<ul class="chat">
    @foreach (var item in (Dictionary<string, List<object>>)Model)
    {
        if (item.Value.Count > 0)
        {

            if (item.Key == "facebook")
            {
                 List<object> lstdic = (List<object>)item.Value;
                 foreach (FacebookMessage FacebookMessage in lstdic)
                {
        <li class="left clearfix">
            <span class="chat-img pull-left">
                <img src="@FacebookMessage.FromProfileUrl" class="img-circle profilePic" alt="User Avatar">
            </span>
            <div class="chat-body clearfix">
                <div>
                    
                    <a target="_blank" href="http://www.facebook.com/@FacebookMessage.FromId"><strong class="primary-font">@FacebookMessage.FromName</strong></a>
                    <small class="pull-right text-muted">
                        <i class="fa fa-clock-o fa-fw"></i>
                       @FacebookMessage.MessageDate
                    </small>
                </div>
                 <div style="margin-top: 2%;">
               @* <p>*@
                    <a target="_blank" href="https://www.facebook.com/@FacebookMessage.FromId/posts/@FacebookMessage.MessageId.Replace(@FacebookMessage.FromId, string.Empty).Replace("_", string.Empty).Trim()"> @FacebookMessage.Message </a>
                @*</p>*@

                @*Display image of post*@
                @if (!string.IsNullOrEmpty(FacebookMessage.Picture) && FacebookMessage.Picture != null)
                {
                    <img src="@FacebookMessage.Picture" style="margin-top: 3%;"> </img>
                }
                
</div>
                <br>
            </div>
        </li>
                }
            }
            else if (item.Key == "twitter")
            {
                //TwitterAccount objTwitterAccount = (TwitterAccount)item.Key;\
                List<object> lstdic = (List<object>)item.Value;
                foreach (TwitterMessage TwitterMessage in lstdic)
                {
        <li class="left clearfix">
            <span class="chat-img pull-left">
                <img src="@TwitterMessage.FromProfileUrl" class="img-circle profilePic" alt="User Avatar">
            </span>
            <div class="chat-body clearfix">
                <div>
                    <a target="_blank" href="http://www.twitter.com/@TwitterMessage.FromScreenName"><strong class="primary-font">@TwitterMessage.FromScreenName</strong></a>
                    <small class="pull-right text-muted">
                        <i class="fa fa-clock-o fa-fw"></i>@TwitterMessage.MessageDate
                    </small>
                </div>
                <p>
                   <a target="_blank" href="https://twitter.com/@TwitterMessage.FromScreenName/status/@TwitterMessage.MessageId"> @TwitterMessage.TwitterMsg</a>
                </p>
            </div>
        </li>
                }
            }
            else if (item.Key == "linkedin") 
            {
                Socioboard.Api.LinkedinAccount.LinkedinAccount ApiLinkedinAccount=new Socioboard.Api.LinkedinAccount.LinkedinAccount();
                List<object> lstdic = (List<object>)item.Value;
                ScheduledMessage objSchedule=(ScheduledMessage)lstdic[0];
                LinkedInAccount objLinkedInAccount = (LinkedInAccount)(new JavaScriptSerializer().Deserialize(ApiLinkedinAccount.GetLinkedinAccountDetailsById(objSchedule.UserId.ToString(),objSchedule.ProfileId), typeof(LinkedInAccount)));
                foreach (ScheduledMessage _ScheduledMessage in lstdic)
                {
                    <li class="left clearfix">
                        <span class="chat-img pull-left">
                            <img src="@objLinkedInAccount.ProfileImageUrl" class="img-circle profilePic" alt="User Avatar">
                        </span>
                        <div class="chat-body clearfix">
                            <div>
                                <strong class="primary-font">@objLinkedInAccount.LinkedinUserName</strong>
                                <small class="pull-left text-muted">
                                    <i class="fa fa-clock-o fa-fw"></i>@_ScheduledMessage.ScheduleTime
                                </small>
                            </div>
                            <p>
                                @_ScheduledMessage.ShareMessage
                            </p>
                        </div>
                    </li>
            }
        }
    }
    }
</ul>



@*<ul class="chat">
    @foreach (var item in (Dictionary<object, List<ScheduledMessage>>)Model)
    {
        if (item.Value.Count > 0)
        {

            if (item.Value[0].ProfileType == "facebook")
            {
                FacebookAccount objFacebookAccount = (FacebookAccount)item.Key;
                foreach (ScheduledMessage scheduledmsg in item.Value)
                {
        <li class="left clearfix">
            <span class="chat-img pull-left">
                <img src="https://graph.facebook.com/@objFacebookAccount.FbUserId/picture?type=small" class="img-circle profilePic" alt="User Avatar">
            </span>
            <div class="chat-body clearfix">
                <div>
                    <strong class="primary-font">@objFacebookAccount.FbUserName</strong>
                    <small class="pull-right text-muted">
                        <i class="fa fa-clock-o fa-fw"></i>@scheduledmsg.ScheduleTime
                                            </small>
                </div>
               

                <p>
                   @scheduledmsg.ShareMessage
                                
                </p>
            </div>
        </li>
                }
            }
            else if (item.Value[0].ProfileType == "twitter")
            {
                TwitterAccount objTwitterAccount = (TwitterAccount)item.Key;
                foreach (ScheduledMessage scheduledmsg in item.Value)
                {
        <li class="left clearfix">
            <span class="chat-img pull-left">
                <img src="@objTwitterAccount.ProfileImageUrl" class="img-circle profilePic" alt="User Avatar">
            </span>
            <div class="chat-body clearfix">
                <div>
                    <strong class="primary-font">@objTwitterAccount.TwitterScreenName</strong>
                    <small class="pull-right text-muted">
                        <i class="fa fa-clock-o fa-fw"></i>@scheduledmsg.ScheduleTime
                                            </small>
                </div>
               

                <p>
                   @scheduledmsg.ShareMessage
                                
                </p>
            </div>
        </li>
                }
            }
            else if (item.Value[0].ProfileType == "linkedin")
            {
                LinkedInAccount objLinkedInAccount = (LinkedInAccount)item.Key;
                foreach (ScheduledMessage scheduledmsg in item.Value)
                {
        <li class="left clearfix">
            <span class="chat-img pull-left">
                <img src="@objLinkedInAccount.ProfileImageUrl" class="img-circle profilePic" alt="User Avatar">
            </span>
            <div class="chat-body clearfix">
                <div>
                    <strong class="primary-font">@objLinkedInAccount.LinkedinUserName</strong>
                    <small class="pull-right text-muted">
                        <i class="fa fa-clock-o fa-fw"></i>@scheduledmsg.ScheduleTime
                                            </small>
                </div>
               

                <p>
                   @scheduledmsg.ShareMessage
                                
                </p>
            </div>
        </li>
                }
            }

        }
    }
</ul>*@
