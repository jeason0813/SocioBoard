//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace Socioboard.Api.TwitterDirectMessages {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TwitterDirectMessagesSoap", Namespace="http://tempuri.org/")]
    public partial class TwitterDirectMessages : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllDirectMessagesByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistinctTwitterDirectMessagesByProfilesAndUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConversationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTwitterDirectMessageSentCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTwitterDirectMessageRecievedCountOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TwitterDirectMessages() {
            this.Url = global::Socioboard.Properties.Settings.Default.Socioboard_Api_TwitterDirectMessages_TwitterDirectMessages;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event getAllDirectMessagesByIdCompletedEventHandler getAllDirectMessagesByIdCompleted;
        
        /// <remarks/>
        public event GetDistinctTwitterDirectMessagesByProfilesAndUserIdCompletedEventHandler GetDistinctTwitterDirectMessagesByProfilesAndUserIdCompleted;
        
        /// <remarks/>
        public event GetConversationCompletedEventHandler GetConversationCompleted;
        
        /// <remarks/>
        public event GetTwitterDirectMessageSentCountCompletedEventHandler GetTwitterDirectMessageSentCountCompleted;
        
        /// <remarks/>
        public event GetTwitterDirectMessageRecievedCountCompletedEventHandler GetTwitterDirectMessageRecievedCountCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllDirectMessagesById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAllDirectMessagesById(string Profileid) {
            object[] results = this.Invoke("getAllDirectMessagesById", new object[] {
                        Profileid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllDirectMessagesByIdAsync(string Profileid) {
            this.getAllDirectMessagesByIdAsync(Profileid, null);
        }
        
        /// <remarks/>
        public void getAllDirectMessagesByIdAsync(string Profileid, object userState) {
            if ((this.getAllDirectMessagesByIdOperationCompleted == null)) {
                this.getAllDirectMessagesByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllDirectMessagesByIdOperationCompleted);
            }
            this.InvokeAsync("getAllDirectMessagesById", new object[] {
                        Profileid}, this.getAllDirectMessagesByIdOperationCompleted, userState);
        }
        
        private void OngetAllDirectMessagesByIdOperationCompleted(object arg) {
            if ((this.getAllDirectMessagesByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllDirectMessagesByIdCompleted(this, new getAllDirectMessagesByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistinctTwitterDirectMessagesByProfilesAndUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDistinctTwitterDirectMessagesByProfilesAndUserId(string UserId, string Profiles) {
            object[] results = this.Invoke("GetDistinctTwitterDirectMessagesByProfilesAndUserId", new object[] {
                        UserId,
                        Profiles});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDistinctTwitterDirectMessagesByProfilesAndUserIdAsync(string UserId, string Profiles) {
            this.GetDistinctTwitterDirectMessagesByProfilesAndUserIdAsync(UserId, Profiles, null);
        }
        
        /// <remarks/>
        public void GetDistinctTwitterDirectMessagesByProfilesAndUserIdAsync(string UserId, string Profiles, object userState) {
            if ((this.GetDistinctTwitterDirectMessagesByProfilesAndUserIdOperationCompleted == null)) {
                this.GetDistinctTwitterDirectMessagesByProfilesAndUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistinctTwitterDirectMessagesByProfilesAndUserIdOperationCompleted);
            }
            this.InvokeAsync("GetDistinctTwitterDirectMessagesByProfilesAndUserId", new object[] {
                        UserId,
                        Profiles}, this.GetDistinctTwitterDirectMessagesByProfilesAndUserIdOperationCompleted, userState);
        }
        
        private void OnGetDistinctTwitterDirectMessagesByProfilesAndUserIdOperationCompleted(object arg) {
            if ((this.GetDistinctTwitterDirectMessagesByProfilesAndUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistinctTwitterDirectMessagesByProfilesAndUserIdCompleted(this, new GetDistinctTwitterDirectMessagesByProfilesAndUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConversation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetConversation(string UserId, string SenderId, string RecipientId) {
            object[] results = this.Invoke("GetConversation", new object[] {
                        UserId,
                        SenderId,
                        RecipientId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetConversationAsync(string UserId, string SenderId, string RecipientId) {
            this.GetConversationAsync(UserId, SenderId, RecipientId, null);
        }
        
        /// <remarks/>
        public void GetConversationAsync(string UserId, string SenderId, string RecipientId, object userState) {
            if ((this.GetConversationOperationCompleted == null)) {
                this.GetConversationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConversationOperationCompleted);
            }
            this.InvokeAsync("GetConversation", new object[] {
                        UserId,
                        SenderId,
                        RecipientId}, this.GetConversationOperationCompleted, userState);
        }
        
        private void OnGetConversationOperationCompleted(object arg) {
            if ((this.GetConversationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConversationCompleted(this, new GetConversationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTwitterDirectMessageSentCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTwitterDirectMessageSentCount(string UserId, string profileids, string days) {
            object[] results = this.Invoke("GetTwitterDirectMessageSentCount", new object[] {
                        UserId,
                        profileids,
                        days});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTwitterDirectMessageSentCountAsync(string UserId, string profileids, string days) {
            this.GetTwitterDirectMessageSentCountAsync(UserId, profileids, days, null);
        }
        
        /// <remarks/>
        public void GetTwitterDirectMessageSentCountAsync(string UserId, string profileids, string days, object userState) {
            if ((this.GetTwitterDirectMessageSentCountOperationCompleted == null)) {
                this.GetTwitterDirectMessageSentCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTwitterDirectMessageSentCountOperationCompleted);
            }
            this.InvokeAsync("GetTwitterDirectMessageSentCount", new object[] {
                        UserId,
                        profileids,
                        days}, this.GetTwitterDirectMessageSentCountOperationCompleted, userState);
        }
        
        private void OnGetTwitterDirectMessageSentCountOperationCompleted(object arg) {
            if ((this.GetTwitterDirectMessageSentCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTwitterDirectMessageSentCountCompleted(this, new GetTwitterDirectMessageSentCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTwitterDirectMessageRecievedCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTwitterDirectMessageRecievedCount(string UserId, string profileids, string days) {
            object[] results = this.Invoke("GetTwitterDirectMessageRecievedCount", new object[] {
                        UserId,
                        profileids,
                        days});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTwitterDirectMessageRecievedCountAsync(string UserId, string profileids, string days) {
            this.GetTwitterDirectMessageRecievedCountAsync(UserId, profileids, days, null);
        }
        
        /// <remarks/>
        public void GetTwitterDirectMessageRecievedCountAsync(string UserId, string profileids, string days, object userState) {
            if ((this.GetTwitterDirectMessageRecievedCountOperationCompleted == null)) {
                this.GetTwitterDirectMessageRecievedCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTwitterDirectMessageRecievedCountOperationCompleted);
            }
            this.InvokeAsync("GetTwitterDirectMessageRecievedCount", new object[] {
                        UserId,
                        profileids,
                        days}, this.GetTwitterDirectMessageRecievedCountOperationCompleted, userState);
        }
        
        private void OnGetTwitterDirectMessageRecievedCountOperationCompleted(object arg) {
            if ((this.GetTwitterDirectMessageRecievedCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTwitterDirectMessageRecievedCountCompleted(this, new GetTwitterDirectMessageRecievedCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getAllDirectMessagesByIdCompletedEventHandler(object sender, getAllDirectMessagesByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllDirectMessagesByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllDirectMessagesByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetDistinctTwitterDirectMessagesByProfilesAndUserIdCompletedEventHandler(object sender, GetDistinctTwitterDirectMessagesByProfilesAndUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistinctTwitterDirectMessagesByProfilesAndUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistinctTwitterDirectMessagesByProfilesAndUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetConversationCompletedEventHandler(object sender, GetConversationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConversationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConversationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetTwitterDirectMessageSentCountCompletedEventHandler(object sender, GetTwitterDirectMessageSentCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTwitterDirectMessageSentCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTwitterDirectMessageSentCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetTwitterDirectMessageRecievedCountCompletedEventHandler(object sender, GetTwitterDirectMessageRecievedCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTwitterDirectMessageRecievedCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTwitterDirectMessageRecievedCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591