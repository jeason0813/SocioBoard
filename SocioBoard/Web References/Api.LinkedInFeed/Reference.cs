//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace Socioboard.Api.LinkedInFeed {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LinkedInFeedSoap", Namespace="http://tempuri.org/")]
    public partial class LinkedInFeed : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetLinkedInFeedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkedInFeedsByUserIdAndProfileIdUsingLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkedInFeeds1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllLinkedInFeedsOfProfileWithIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public LinkedInFeed() {
            this.Url = global::Socioboard.Properties.Settings.Default.Socioboard_Api_LinkedInFeed_LinkedInFeed;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetLinkedInFeedsCompletedEventHandler GetLinkedInFeedsCompleted;
        
        /// <remarks/>
        public event GetLinkedInFeedsByUserIdAndProfileIdUsingLimitCompletedEventHandler GetLinkedInFeedsByUserIdAndProfileIdUsingLimitCompleted;
        
        /// <remarks/>
        public event GetLinkedInFeeds1CompletedEventHandler GetLinkedInFeeds1Completed;
        
        /// <remarks/>
        public event GetAllLinkedInFeedsOfProfileWithIdCompletedEventHandler GetAllLinkedInFeedsOfProfileWithIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLinkedInFeeds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLinkedInFeeds(string UserId, string LinkedInId) {
            object[] results = this.Invoke("GetLinkedInFeeds", new object[] {
                        UserId,
                        LinkedInId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkedInFeedsAsync(string UserId, string LinkedInId) {
            this.GetLinkedInFeedsAsync(UserId, LinkedInId, null);
        }
        
        /// <remarks/>
        public void GetLinkedInFeedsAsync(string UserId, string LinkedInId, object userState) {
            if ((this.GetLinkedInFeedsOperationCompleted == null)) {
                this.GetLinkedInFeedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkedInFeedsOperationCompleted);
            }
            this.InvokeAsync("GetLinkedInFeeds", new object[] {
                        UserId,
                        LinkedInId}, this.GetLinkedInFeedsOperationCompleted, userState);
        }
        
        private void OnGetLinkedInFeedsOperationCompleted(object arg) {
            if ((this.GetLinkedInFeedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkedInFeedsCompleted(this, new GetLinkedInFeedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLinkedInFeedsByUserIdAndProfileIdUsingLimit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLinkedInFeedsByUserIdAndProfileIdUsingLimit(string UserId, string LinkedInId, string noOfDataToSkip, string noOfResultsFromTop) {
            object[] results = this.Invoke("GetLinkedInFeedsByUserIdAndProfileIdUsingLimit", new object[] {
                        UserId,
                        LinkedInId,
                        noOfDataToSkip,
                        noOfResultsFromTop});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkedInFeedsByUserIdAndProfileIdUsingLimitAsync(string UserId, string LinkedInId, string noOfDataToSkip, string noOfResultsFromTop) {
            this.GetLinkedInFeedsByUserIdAndProfileIdUsingLimitAsync(UserId, LinkedInId, noOfDataToSkip, noOfResultsFromTop, null);
        }
        
        /// <remarks/>
        public void GetLinkedInFeedsByUserIdAndProfileIdUsingLimitAsync(string UserId, string LinkedInId, string noOfDataToSkip, string noOfResultsFromTop, object userState) {
            if ((this.GetLinkedInFeedsByUserIdAndProfileIdUsingLimitOperationCompleted == null)) {
                this.GetLinkedInFeedsByUserIdAndProfileIdUsingLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkedInFeedsByUserIdAndProfileIdUsingLimitOperationCompleted);
            }
            this.InvokeAsync("GetLinkedInFeedsByUserIdAndProfileIdUsingLimit", new object[] {
                        UserId,
                        LinkedInId,
                        noOfDataToSkip,
                        noOfResultsFromTop}, this.GetLinkedInFeedsByUserIdAndProfileIdUsingLimitOperationCompleted, userState);
        }
        
        private void OnGetLinkedInFeedsByUserIdAndProfileIdUsingLimitOperationCompleted(object arg) {
            if ((this.GetLinkedInFeedsByUserIdAndProfileIdUsingLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkedInFeedsByUserIdAndProfileIdUsingLimitCompleted(this, new GetLinkedInFeedsByUserIdAndProfileIdUsingLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLinkedInFeeds1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLinkedInFeeds1(string UserId, string LinkedInId, int count) {
            object[] results = this.Invoke("GetLinkedInFeeds1", new object[] {
                        UserId,
                        LinkedInId,
                        count});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkedInFeeds1Async(string UserId, string LinkedInId, int count) {
            this.GetLinkedInFeeds1Async(UserId, LinkedInId, count, null);
        }
        
        /// <remarks/>
        public void GetLinkedInFeeds1Async(string UserId, string LinkedInId, int count, object userState) {
            if ((this.GetLinkedInFeeds1OperationCompleted == null)) {
                this.GetLinkedInFeeds1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkedInFeeds1OperationCompleted);
            }
            this.InvokeAsync("GetLinkedInFeeds1", new object[] {
                        UserId,
                        LinkedInId,
                        count}, this.GetLinkedInFeeds1OperationCompleted, userState);
        }
        
        private void OnGetLinkedInFeeds1OperationCompleted(object arg) {
            if ((this.GetLinkedInFeeds1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkedInFeeds1Completed(this, new GetLinkedInFeeds1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllLinkedInFeedsOfProfileWithId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllLinkedInFeedsOfProfileWithId(string ProfileId, string Id) {
            object[] results = this.Invoke("GetAllLinkedInFeedsOfProfileWithId", new object[] {
                        ProfileId,
                        Id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllLinkedInFeedsOfProfileWithIdAsync(string ProfileId, string Id) {
            this.GetAllLinkedInFeedsOfProfileWithIdAsync(ProfileId, Id, null);
        }
        
        /// <remarks/>
        public void GetAllLinkedInFeedsOfProfileWithIdAsync(string ProfileId, string Id, object userState) {
            if ((this.GetAllLinkedInFeedsOfProfileWithIdOperationCompleted == null)) {
                this.GetAllLinkedInFeedsOfProfileWithIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllLinkedInFeedsOfProfileWithIdOperationCompleted);
            }
            this.InvokeAsync("GetAllLinkedInFeedsOfProfileWithId", new object[] {
                        ProfileId,
                        Id}, this.GetAllLinkedInFeedsOfProfileWithIdOperationCompleted, userState);
        }
        
        private void OnGetAllLinkedInFeedsOfProfileWithIdOperationCompleted(object arg) {
            if ((this.GetAllLinkedInFeedsOfProfileWithIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllLinkedInFeedsOfProfileWithIdCompleted(this, new GetAllLinkedInFeedsOfProfileWithIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetLinkedInFeedsCompletedEventHandler(object sender, GetLinkedInFeedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkedInFeedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkedInFeedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetLinkedInFeedsByUserIdAndProfileIdUsingLimitCompletedEventHandler(object sender, GetLinkedInFeedsByUserIdAndProfileIdUsingLimitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkedInFeedsByUserIdAndProfileIdUsingLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkedInFeedsByUserIdAndProfileIdUsingLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetLinkedInFeeds1CompletedEventHandler(object sender, GetLinkedInFeeds1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkedInFeeds1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkedInFeeds1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAllLinkedInFeedsOfProfileWithIdCompletedEventHandler(object sender, GetAllLinkedInFeedsOfProfileWithIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllLinkedInFeedsOfProfileWithIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllLinkedInFeedsOfProfileWithIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591