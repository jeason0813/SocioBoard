//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace Socioboard.Api.GooglePlusAccount {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="GooglePlusAccountSoap", Namespace="http://tempuri.org/")]
    public partial class GooglePlusAccount : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAllGooglePlusAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGooglePlusAccountDetailsByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGooglePlusAccountByAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllBloggerAccountByUserIdAndGroupIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGplusAccountOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public GooglePlusAccount() {
            this.Url = global::Socioboard.Properties.Settings.Default.Socioboard_Api_GooglePlusAccount_GooglePlusAccount;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAllGooglePlusAccountsCompletedEventHandler GetAllGooglePlusAccountsCompleted;
        
        /// <remarks/>
        public event GetGooglePlusAccountDetailsByIdCompletedEventHandler GetGooglePlusAccountDetailsByIdCompleted;
        
        /// <remarks/>
        public event UpdateGooglePlusAccountByAdminCompletedEventHandler UpdateGooglePlusAccountByAdminCompleted;
        
        /// <remarks/>
        public event GetAllBloggerAccountByUserIdAndGroupIdCompletedEventHandler GetAllBloggerAccountByUserIdAndGroupIdCompleted;
        
        /// <remarks/>
        public event DeleteGplusAccountCompletedEventHandler DeleteGplusAccountCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllGooglePlusAccounts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllGooglePlusAccounts() {
            object[] results = this.Invoke("GetAllGooglePlusAccounts", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllGooglePlusAccountsAsync() {
            this.GetAllGooglePlusAccountsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllGooglePlusAccountsAsync(object userState) {
            if ((this.GetAllGooglePlusAccountsOperationCompleted == null)) {
                this.GetAllGooglePlusAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllGooglePlusAccountsOperationCompleted);
            }
            this.InvokeAsync("GetAllGooglePlusAccounts", new object[0], this.GetAllGooglePlusAccountsOperationCompleted, userState);
        }
        
        private void OnGetAllGooglePlusAccountsOperationCompleted(object arg) {
            if ((this.GetAllGooglePlusAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllGooglePlusAccountsCompleted(this, new GetAllGooglePlusAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGooglePlusAccountDetailsById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGooglePlusAccountDetailsById(string UserId, string ProfileId) {
            object[] results = this.Invoke("GetGooglePlusAccountDetailsById", new object[] {
                        UserId,
                        ProfileId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGooglePlusAccountDetailsByIdAsync(string UserId, string ProfileId) {
            this.GetGooglePlusAccountDetailsByIdAsync(UserId, ProfileId, null);
        }
        
        /// <remarks/>
        public void GetGooglePlusAccountDetailsByIdAsync(string UserId, string ProfileId, object userState) {
            if ((this.GetGooglePlusAccountDetailsByIdOperationCompleted == null)) {
                this.GetGooglePlusAccountDetailsByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGooglePlusAccountDetailsByIdOperationCompleted);
            }
            this.InvokeAsync("GetGooglePlusAccountDetailsById", new object[] {
                        UserId,
                        ProfileId}, this.GetGooglePlusAccountDetailsByIdOperationCompleted, userState);
        }
        
        private void OnGetGooglePlusAccountDetailsByIdOperationCompleted(object arg) {
            if ((this.GetGooglePlusAccountDetailsByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGooglePlusAccountDetailsByIdCompleted(this, new GetGooglePlusAccountDetailsByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateGooglePlusAccountByAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateGooglePlusAccountByAdmin(string ObjGooglePlus) {
            object[] results = this.Invoke("UpdateGooglePlusAccountByAdmin", new object[] {
                        ObjGooglePlus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGooglePlusAccountByAdminAsync(string ObjGooglePlus) {
            this.UpdateGooglePlusAccountByAdminAsync(ObjGooglePlus, null);
        }
        
        /// <remarks/>
        public void UpdateGooglePlusAccountByAdminAsync(string ObjGooglePlus, object userState) {
            if ((this.UpdateGooglePlusAccountByAdminOperationCompleted == null)) {
                this.UpdateGooglePlusAccountByAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGooglePlusAccountByAdminOperationCompleted);
            }
            this.InvokeAsync("UpdateGooglePlusAccountByAdmin", new object[] {
                        ObjGooglePlus}, this.UpdateGooglePlusAccountByAdminOperationCompleted, userState);
        }
        
        private void OnUpdateGooglePlusAccountByAdminOperationCompleted(object arg) {
            if ((this.UpdateGooglePlusAccountByAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGooglePlusAccountByAdminCompleted(this, new UpdateGooglePlusAccountByAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllBloggerAccountByUserIdAndGroupId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllBloggerAccountByUserIdAndGroupId(string userid, string groupid) {
            object[] results = this.Invoke("GetAllBloggerAccountByUserIdAndGroupId", new object[] {
                        userid,
                        groupid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllBloggerAccountByUserIdAndGroupIdAsync(string userid, string groupid) {
            this.GetAllBloggerAccountByUserIdAndGroupIdAsync(userid, groupid, null);
        }
        
        /// <remarks/>
        public void GetAllBloggerAccountByUserIdAndGroupIdAsync(string userid, string groupid, object userState) {
            if ((this.GetAllBloggerAccountByUserIdAndGroupIdOperationCompleted == null)) {
                this.GetAllBloggerAccountByUserIdAndGroupIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllBloggerAccountByUserIdAndGroupIdOperationCompleted);
            }
            this.InvokeAsync("GetAllBloggerAccountByUserIdAndGroupId", new object[] {
                        userid,
                        groupid}, this.GetAllBloggerAccountByUserIdAndGroupIdOperationCompleted, userState);
        }
        
        private void OnGetAllBloggerAccountByUserIdAndGroupIdOperationCompleted(object arg) {
            if ((this.GetAllBloggerAccountByUserIdAndGroupIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllBloggerAccountByUserIdAndGroupIdCompleted(this, new GetAllBloggerAccountByUserIdAndGroupIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteGplusAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteGplusAccount(string UserId, string ProfileId, string GroupId) {
            this.Invoke("DeleteGplusAccount", new object[] {
                        UserId,
                        ProfileId,
                        GroupId});
        }
        
        /// <remarks/>
        public void DeleteGplusAccountAsync(string UserId, string ProfileId, string GroupId) {
            this.DeleteGplusAccountAsync(UserId, ProfileId, GroupId, null);
        }
        
        /// <remarks/>
        public void DeleteGplusAccountAsync(string UserId, string ProfileId, string GroupId, object userState) {
            if ((this.DeleteGplusAccountOperationCompleted == null)) {
                this.DeleteGplusAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGplusAccountOperationCompleted);
            }
            this.InvokeAsync("DeleteGplusAccount", new object[] {
                        UserId,
                        ProfileId,
                        GroupId}, this.DeleteGplusAccountOperationCompleted, userState);
        }
        
        private void OnDeleteGplusAccountOperationCompleted(object arg) {
            if ((this.DeleteGplusAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGplusAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAllGooglePlusAccountsCompletedEventHandler(object sender, GetAllGooglePlusAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllGooglePlusAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllGooglePlusAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetGooglePlusAccountDetailsByIdCompletedEventHandler(object sender, GetGooglePlusAccountDetailsByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGooglePlusAccountDetailsByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGooglePlusAccountDetailsByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateGooglePlusAccountByAdminCompletedEventHandler(object sender, UpdateGooglePlusAccountByAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGooglePlusAccountByAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGooglePlusAccountByAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAllBloggerAccountByUserIdAndGroupIdCompletedEventHandler(object sender, GetAllBloggerAccountByUserIdAndGroupIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllBloggerAccountByUserIdAndGroupIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllBloggerAccountByUserIdAndGroupIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteGplusAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591