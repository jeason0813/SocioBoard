//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace Socioboard.Api.ScheduledMessage {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ScheduledMessageSoap", Namespace="http://tempuri.org/")]
    public partial class ScheduledMessage : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UploadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback ADDScheduledMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGroupScheduleMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateScheduledMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllScheduledMessageByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUnSentMessagesOfUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUnSentMessagesAccordingToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWooQueueMessageByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleMessageByMessageIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckMessageExistsAtTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMessagesOfUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateScheduledMessageByMsgIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getScheduledMessageByProfileTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllSentMessageDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSociaoQueueMessageByUserIdAndGroupIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSchecduledMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditSchecduledMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAllScheduledMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddComposeMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllScheduledMessageforADayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllScheduledMessageByDaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllScheduledMessageByMonthOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSentMessageDetailsForCustomrangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllScheduledDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSentMessageCountByProfileIdAndUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSentMessageCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClickCountOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ScheduledMessage() {
            this.Url = global::Socioboard.Properties.Settings.Default.Socioboard_Api_ScheduledMessage_ScheduledMessage;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UploadFileCompletedEventHandler UploadFileCompleted;
        
        /// <remarks/>
        public event ADDScheduledMessageCompletedEventHandler ADDScheduledMessageCompleted;
        
        /// <remarks/>
        public event AddGroupScheduleMessagesCompletedEventHandler AddGroupScheduleMessagesCompleted;
        
        /// <remarks/>
        public event UpdateScheduledMessageCompletedEventHandler UpdateScheduledMessageCompleted;
        
        /// <remarks/>
        public event GetAllScheduledMessageByUserIdCompletedEventHandler GetAllScheduledMessageByUserIdCompleted;
        
        /// <remarks/>
        public event GetAllUnSentMessagesOfUserCompletedEventHandler GetAllUnSentMessagesOfUserCompleted;
        
        /// <remarks/>
        public event GetAllUnSentMessagesAccordingToGroupCompletedEventHandler GetAllUnSentMessagesAccordingToGroupCompleted;
        
        /// <remarks/>
        public event GetWooQueueMessageByUserIdCompletedEventHandler GetWooQueueMessageByUserIdCompleted;
        
        /// <remarks/>
        public event GetScheduleMessageByMessageIdCompletedEventHandler GetScheduleMessageByMessageIdCompleted;
        
        /// <remarks/>
        public event CheckMessageExistsAtTimeCompletedEventHandler CheckMessageExistsAtTimeCompleted;
        
        /// <remarks/>
        public event GetAllMessagesOfUserCompletedEventHandler GetAllMessagesOfUserCompleted;
        
        /// <remarks/>
        public event UpdateScheduledMessageByMsgIdCompletedEventHandler UpdateScheduledMessageByMsgIdCompleted;
        
        /// <remarks/>
        public event getScheduledMessageByProfileTypeCompletedEventHandler getScheduledMessageByProfileTypeCompleted;
        
        /// <remarks/>
        public event getAllSentMessageDetailsCompletedEventHandler getAllSentMessageDetailsCompleted;
        
        /// <remarks/>
        public event GetSociaoQueueMessageByUserIdAndGroupIdCompletedEventHandler GetSociaoQueueMessageByUserIdAndGroupIdCompleted;
        
        /// <remarks/>
        public event DeleteSchecduledMessageCompletedEventHandler DeleteSchecduledMessageCompleted;
        
        /// <remarks/>
        public event EditSchecduledMessageCompletedEventHandler EditSchecduledMessageCompleted;
        
        /// <remarks/>
        public event AddAllScheduledMessageCompletedEventHandler AddAllScheduledMessageCompleted;
        
        /// <remarks/>
        public event AddComposeMessageCompletedEventHandler AddComposeMessageCompleted;
        
        /// <remarks/>
        public event GetAllScheduledMessageforADayCompletedEventHandler GetAllScheduledMessageforADayCompleted;
        
        /// <remarks/>
        public event GetAllScheduledMessageByDaysCompletedEventHandler GetAllScheduledMessageByDaysCompleted;
        
        /// <remarks/>
        public event GetAllScheduledMessageByMonthCompletedEventHandler GetAllScheduledMessageByMonthCompleted;
        
        /// <remarks/>
        public event GetAllSentMessageDetailsForCustomrangeCompletedEventHandler GetAllSentMessageDetailsForCustomrangeCompleted;
        
        /// <remarks/>
        public event GetAllScheduledDetailsCompletedEventHandler GetAllScheduledDetailsCompleted;
        
        /// <remarks/>
        public event GetSentMessageCountByProfileIdAndUserIdCompletedEventHandler GetSentMessageCountByProfileIdAndUserIdCompleted;
        
        /// <remarks/>
        public event GetSentMessageCountCompletedEventHandler GetSentMessageCountCompleted;
        
        /// <remarks/>
        public event GetClickCountCompletedEventHandler GetClickCountCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadFile([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] f, string fileName) {
            object[] results = this.Invoke("UploadFile", new object[] {
                        f,
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFileAsync(byte[] f, string fileName) {
            this.UploadFileAsync(f, fileName, null);
        }
        
        /// <remarks/>
        public void UploadFileAsync(byte[] f, string fileName, object userState) {
            if ((this.UploadFileOperationCompleted == null)) {
                this.UploadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFileOperationCompleted);
            }
            this.InvokeAsync("UploadFile", new object[] {
                        f,
                        fileName}, this.UploadFileOperationCompleted, userState);
        }
        
        private void OnUploadFileOperationCompleted(object arg) {
            if ((this.UploadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFileCompleted(this, new UploadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ADDScheduledMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ADDScheduledMessage(string typeandid, string ShareMessage, System.DateTime ClientTime, System.DateTime ScheduleTime, bool Status, string UserId, string PicUrl, System.DateTime CreateTime) {
            object[] results = this.Invoke("ADDScheduledMessage", new object[] {
                        typeandid,
                        ShareMessage,
                        ClientTime,
                        ScheduleTime,
                        Status,
                        UserId,
                        PicUrl,
                        CreateTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ADDScheduledMessageAsync(string typeandid, string ShareMessage, System.DateTime ClientTime, System.DateTime ScheduleTime, bool Status, string UserId, string PicUrl, System.DateTime CreateTime) {
            this.ADDScheduledMessageAsync(typeandid, ShareMessage, ClientTime, ScheduleTime, Status, UserId, PicUrl, CreateTime, null);
        }
        
        /// <remarks/>
        public void ADDScheduledMessageAsync(string typeandid, string ShareMessage, System.DateTime ClientTime, System.DateTime ScheduleTime, bool Status, string UserId, string PicUrl, System.DateTime CreateTime, object userState) {
            if ((this.ADDScheduledMessageOperationCompleted == null)) {
                this.ADDScheduledMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnADDScheduledMessageOperationCompleted);
            }
            this.InvokeAsync("ADDScheduledMessage", new object[] {
                        typeandid,
                        ShareMessage,
                        ClientTime,
                        ScheduleTime,
                        Status,
                        UserId,
                        PicUrl,
                        CreateTime}, this.ADDScheduledMessageOperationCompleted, userState);
        }
        
        private void OnADDScheduledMessageOperationCompleted(object arg) {
            if ((this.ADDScheduledMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ADDScheduledMessageCompleted(this, new ADDScheduledMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddGroupScheduleMessages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddGroupScheduleMessages(string ScheduleTime, string CreateTime, string ProfileType, string ProfileId, string PicUrl, string ClientTime, string ShareMessage, string UserId, string Status) {
            object[] results = this.Invoke("AddGroupScheduleMessages", new object[] {
                        ScheduleTime,
                        CreateTime,
                        ProfileType,
                        ProfileId,
                        PicUrl,
                        ClientTime,
                        ShareMessage,
                        UserId,
                        Status});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddGroupScheduleMessagesAsync(string ScheduleTime, string CreateTime, string ProfileType, string ProfileId, string PicUrl, string ClientTime, string ShareMessage, string UserId, string Status) {
            this.AddGroupScheduleMessagesAsync(ScheduleTime, CreateTime, ProfileType, ProfileId, PicUrl, ClientTime, ShareMessage, UserId, Status, null);
        }
        
        /// <remarks/>
        public void AddGroupScheduleMessagesAsync(string ScheduleTime, string CreateTime, string ProfileType, string ProfileId, string PicUrl, string ClientTime, string ShareMessage, string UserId, string Status, object userState) {
            if ((this.AddGroupScheduleMessagesOperationCompleted == null)) {
                this.AddGroupScheduleMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGroupScheduleMessagesOperationCompleted);
            }
            this.InvokeAsync("AddGroupScheduleMessages", new object[] {
                        ScheduleTime,
                        CreateTime,
                        ProfileType,
                        ProfileId,
                        PicUrl,
                        ClientTime,
                        ShareMessage,
                        UserId,
                        Status}, this.AddGroupScheduleMessagesOperationCompleted, userState);
        }
        
        private void OnAddGroupScheduleMessagesOperationCompleted(object arg) {
            if ((this.AddGroupScheduleMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGroupScheduleMessagesCompleted(this, new AddGroupScheduleMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateScheduledMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateScheduledMessage(string typeidandmsgid, string ShareMessage, System.DateTime scheduledTime, string picurl) {
            object[] results = this.Invoke("UpdateScheduledMessage", new object[] {
                        typeidandmsgid,
                        ShareMessage,
                        scheduledTime,
                        picurl});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateScheduledMessageAsync(string typeidandmsgid, string ShareMessage, System.DateTime scheduledTime, string picurl) {
            this.UpdateScheduledMessageAsync(typeidandmsgid, ShareMessage, scheduledTime, picurl, null);
        }
        
        /// <remarks/>
        public void UpdateScheduledMessageAsync(string typeidandmsgid, string ShareMessage, System.DateTime scheduledTime, string picurl, object userState) {
            if ((this.UpdateScheduledMessageOperationCompleted == null)) {
                this.UpdateScheduledMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateScheduledMessageOperationCompleted);
            }
            this.InvokeAsync("UpdateScheduledMessage", new object[] {
                        typeidandmsgid,
                        ShareMessage,
                        scheduledTime,
                        picurl}, this.UpdateScheduledMessageOperationCompleted, userState);
        }
        
        private void OnUpdateScheduledMessageOperationCompleted(object arg) {
            if ((this.UpdateScheduledMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateScheduledMessageCompleted(this, new UpdateScheduledMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllScheduledMessageByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllScheduledMessageByUserId(string UserId) {
            object[] results = this.Invoke("GetAllScheduledMessageByUserId", new object[] {
                        UserId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllScheduledMessageByUserIdAsync(string UserId) {
            this.GetAllScheduledMessageByUserIdAsync(UserId, null);
        }
        
        /// <remarks/>
        public void GetAllScheduledMessageByUserIdAsync(string UserId, object userState) {
            if ((this.GetAllScheduledMessageByUserIdOperationCompleted == null)) {
                this.GetAllScheduledMessageByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllScheduledMessageByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetAllScheduledMessageByUserId", new object[] {
                        UserId}, this.GetAllScheduledMessageByUserIdOperationCompleted, userState);
        }
        
        private void OnGetAllScheduledMessageByUserIdOperationCompleted(object arg) {
            if ((this.GetAllScheduledMessageByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllScheduledMessageByUserIdCompleted(this, new GetAllScheduledMessageByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllUnSentMessagesOfUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllUnSentMessagesOfUser(string UserId) {
            object[] results = this.Invoke("GetAllUnSentMessagesOfUser", new object[] {
                        UserId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUnSentMessagesOfUserAsync(string UserId) {
            this.GetAllUnSentMessagesOfUserAsync(UserId, null);
        }
        
        /// <remarks/>
        public void GetAllUnSentMessagesOfUserAsync(string UserId, object userState) {
            if ((this.GetAllUnSentMessagesOfUserOperationCompleted == null)) {
                this.GetAllUnSentMessagesOfUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUnSentMessagesOfUserOperationCompleted);
            }
            this.InvokeAsync("GetAllUnSentMessagesOfUser", new object[] {
                        UserId}, this.GetAllUnSentMessagesOfUserOperationCompleted, userState);
        }
        
        private void OnGetAllUnSentMessagesOfUserOperationCompleted(object arg) {
            if ((this.GetAllUnSentMessagesOfUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUnSentMessagesOfUserCompleted(this, new GetAllUnSentMessagesOfUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllUnSentMessagesAccordingToGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllUnSentMessagesAccordingToGroup(string UserId, string profileid, string network) {
            object[] results = this.Invoke("GetAllUnSentMessagesAccordingToGroup", new object[] {
                        UserId,
                        profileid,
                        network});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUnSentMessagesAccordingToGroupAsync(string UserId, string profileid, string network) {
            this.GetAllUnSentMessagesAccordingToGroupAsync(UserId, profileid, network, null);
        }
        
        /// <remarks/>
        public void GetAllUnSentMessagesAccordingToGroupAsync(string UserId, string profileid, string network, object userState) {
            if ((this.GetAllUnSentMessagesAccordingToGroupOperationCompleted == null)) {
                this.GetAllUnSentMessagesAccordingToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUnSentMessagesAccordingToGroupOperationCompleted);
            }
            this.InvokeAsync("GetAllUnSentMessagesAccordingToGroup", new object[] {
                        UserId,
                        profileid,
                        network}, this.GetAllUnSentMessagesAccordingToGroupOperationCompleted, userState);
        }
        
        private void OnGetAllUnSentMessagesAccordingToGroupOperationCompleted(object arg) {
            if ((this.GetAllUnSentMessagesAccordingToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUnSentMessagesAccordingToGroupCompleted(this, new GetAllUnSentMessagesAccordingToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWooQueueMessageByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWooQueueMessageByUserId(string UserId) {
            object[] results = this.Invoke("GetWooQueueMessageByUserId", new object[] {
                        UserId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWooQueueMessageByUserIdAsync(string UserId) {
            this.GetWooQueueMessageByUserIdAsync(UserId, null);
        }
        
        /// <remarks/>
        public void GetWooQueueMessageByUserIdAsync(string UserId, object userState) {
            if ((this.GetWooQueueMessageByUserIdOperationCompleted == null)) {
                this.GetWooQueueMessageByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWooQueueMessageByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetWooQueueMessageByUserId", new object[] {
                        UserId}, this.GetWooQueueMessageByUserIdOperationCompleted, userState);
        }
        
        private void OnGetWooQueueMessageByUserIdOperationCompleted(object arg) {
            if ((this.GetWooQueueMessageByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWooQueueMessageByUserIdCompleted(this, new GetWooQueueMessageByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetScheduleMessageByMessageId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetScheduleMessageByMessageId(string MessageId) {
            object[] results = this.Invoke("GetScheduleMessageByMessageId", new object[] {
                        MessageId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleMessageByMessageIdAsync(string MessageId) {
            this.GetScheduleMessageByMessageIdAsync(MessageId, null);
        }
        
        /// <remarks/>
        public void GetScheduleMessageByMessageIdAsync(string MessageId, object userState) {
            if ((this.GetScheduleMessageByMessageIdOperationCompleted == null)) {
                this.GetScheduleMessageByMessageIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleMessageByMessageIdOperationCompleted);
            }
            this.InvokeAsync("GetScheduleMessageByMessageId", new object[] {
                        MessageId}, this.GetScheduleMessageByMessageIdOperationCompleted, userState);
        }
        
        private void OnGetScheduleMessageByMessageIdOperationCompleted(object arg) {
            if ((this.GetScheduleMessageByMessageIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleMessageByMessageIdCompleted(this, new GetScheduleMessageByMessageIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckMessageExistsAtTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckMessageExistsAtTime(string UserId, System.DateTime schetime) {
            object[] results = this.Invoke("CheckMessageExistsAtTime", new object[] {
                        UserId,
                        schetime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckMessageExistsAtTimeAsync(string UserId, System.DateTime schetime) {
            this.CheckMessageExistsAtTimeAsync(UserId, schetime, null);
        }
        
        /// <remarks/>
        public void CheckMessageExistsAtTimeAsync(string UserId, System.DateTime schetime, object userState) {
            if ((this.CheckMessageExistsAtTimeOperationCompleted == null)) {
                this.CheckMessageExistsAtTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckMessageExistsAtTimeOperationCompleted);
            }
            this.InvokeAsync("CheckMessageExistsAtTime", new object[] {
                        UserId,
                        schetime}, this.CheckMessageExistsAtTimeOperationCompleted, userState);
        }
        
        private void OnCheckMessageExistsAtTimeOperationCompleted(object arg) {
            if ((this.CheckMessageExistsAtTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckMessageExistsAtTimeCompleted(this, new CheckMessageExistsAtTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllMessagesOfUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllMessagesOfUser(string UserId, string profileid) {
            object[] results = this.Invoke("GetAllMessagesOfUser", new object[] {
                        UserId,
                        profileid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMessagesOfUserAsync(string UserId, string profileid) {
            this.GetAllMessagesOfUserAsync(UserId, profileid, null);
        }
        
        /// <remarks/>
        public void GetAllMessagesOfUserAsync(string UserId, string profileid, object userState) {
            if ((this.GetAllMessagesOfUserOperationCompleted == null)) {
                this.GetAllMessagesOfUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMessagesOfUserOperationCompleted);
            }
            this.InvokeAsync("GetAllMessagesOfUser", new object[] {
                        UserId,
                        profileid}, this.GetAllMessagesOfUserOperationCompleted, userState);
        }
        
        private void OnGetAllMessagesOfUserOperationCompleted(object arg) {
            if ((this.GetAllMessagesOfUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMessagesOfUserCompleted(this, new GetAllMessagesOfUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateScheduledMessageByMsgId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateScheduledMessageByMsgId(System.Guid msgId) {
            this.Invoke("UpdateScheduledMessageByMsgId", new object[] {
                        msgId});
        }
        
        /// <remarks/>
        public void UpdateScheduledMessageByMsgIdAsync(System.Guid msgId) {
            this.UpdateScheduledMessageByMsgIdAsync(msgId, null);
        }
        
        /// <remarks/>
        public void UpdateScheduledMessageByMsgIdAsync(System.Guid msgId, object userState) {
            if ((this.UpdateScheduledMessageByMsgIdOperationCompleted == null)) {
                this.UpdateScheduledMessageByMsgIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateScheduledMessageByMsgIdOperationCompleted);
            }
            this.InvokeAsync("UpdateScheduledMessageByMsgId", new object[] {
                        msgId}, this.UpdateScheduledMessageByMsgIdOperationCompleted, userState);
        }
        
        private void OnUpdateScheduledMessageByMsgIdOperationCompleted(object arg) {
            if ((this.UpdateScheduledMessageByMsgIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateScheduledMessageByMsgIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getScheduledMessageByProfileType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getScheduledMessageByProfileType(string profileType) {
            object[] results = this.Invoke("getScheduledMessageByProfileType", new object[] {
                        profileType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getScheduledMessageByProfileTypeAsync(string profileType) {
            this.getScheduledMessageByProfileTypeAsync(profileType, null);
        }
        
        /// <remarks/>
        public void getScheduledMessageByProfileTypeAsync(string profileType, object userState) {
            if ((this.getScheduledMessageByProfileTypeOperationCompleted == null)) {
                this.getScheduledMessageByProfileTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetScheduledMessageByProfileTypeOperationCompleted);
            }
            this.InvokeAsync("getScheduledMessageByProfileType", new object[] {
                        profileType}, this.getScheduledMessageByProfileTypeOperationCompleted, userState);
        }
        
        private void OngetScheduledMessageByProfileTypeOperationCompleted(object arg) {
            if ((this.getScheduledMessageByProfileTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getScheduledMessageByProfileTypeCompleted(this, new getScheduledMessageByProfileTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllSentMessageDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAllSentMessageDetails(string profileid, string userid) {
            object[] results = this.Invoke("getAllSentMessageDetails", new object[] {
                        profileid,
                        userid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllSentMessageDetailsAsync(string profileid, string userid) {
            this.getAllSentMessageDetailsAsync(profileid, userid, null);
        }
        
        /// <remarks/>
        public void getAllSentMessageDetailsAsync(string profileid, string userid, object userState) {
            if ((this.getAllSentMessageDetailsOperationCompleted == null)) {
                this.getAllSentMessageDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllSentMessageDetailsOperationCompleted);
            }
            this.InvokeAsync("getAllSentMessageDetails", new object[] {
                        profileid,
                        userid}, this.getAllSentMessageDetailsOperationCompleted, userState);
        }
        
        private void OngetAllSentMessageDetailsOperationCompleted(object arg) {
            if ((this.getAllSentMessageDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllSentMessageDetailsCompleted(this, new getAllSentMessageDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSociaoQueueMessageByUserIdAndGroupId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSociaoQueueMessageByUserIdAndGroupId(string UserId, string GroupId) {
            object[] results = this.Invoke("GetSociaoQueueMessageByUserIdAndGroupId", new object[] {
                        UserId,
                        GroupId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSociaoQueueMessageByUserIdAndGroupIdAsync(string UserId, string GroupId) {
            this.GetSociaoQueueMessageByUserIdAndGroupIdAsync(UserId, GroupId, null);
        }
        
        /// <remarks/>
        public void GetSociaoQueueMessageByUserIdAndGroupIdAsync(string UserId, string GroupId, object userState) {
            if ((this.GetSociaoQueueMessageByUserIdAndGroupIdOperationCompleted == null)) {
                this.GetSociaoQueueMessageByUserIdAndGroupIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSociaoQueueMessageByUserIdAndGroupIdOperationCompleted);
            }
            this.InvokeAsync("GetSociaoQueueMessageByUserIdAndGroupId", new object[] {
                        UserId,
                        GroupId}, this.GetSociaoQueueMessageByUserIdAndGroupIdOperationCompleted, userState);
        }
        
        private void OnGetSociaoQueueMessageByUserIdAndGroupIdOperationCompleted(object arg) {
            if ((this.GetSociaoQueueMessageByUserIdAndGroupIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSociaoQueueMessageByUserIdAndGroupIdCompleted(this, new GetSociaoQueueMessageByUserIdAndGroupIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteSchecduledMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteSchecduledMessage(string id) {
            object[] results = this.Invoke("DeleteSchecduledMessage", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSchecduledMessageAsync(string id) {
            this.DeleteSchecduledMessageAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteSchecduledMessageAsync(string id, object userState) {
            if ((this.DeleteSchecduledMessageOperationCompleted == null)) {
                this.DeleteSchecduledMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSchecduledMessageOperationCompleted);
            }
            this.InvokeAsync("DeleteSchecduledMessage", new object[] {
                        id}, this.DeleteSchecduledMessageOperationCompleted, userState);
        }
        
        private void OnDeleteSchecduledMessageOperationCompleted(object arg) {
            if ((this.DeleteSchecduledMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSchecduledMessageCompleted(this, new DeleteSchecduledMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditSchecduledMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditSchecduledMessage(string id, string msg) {
            object[] results = this.Invoke("EditSchecduledMessage", new object[] {
                        id,
                        msg});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditSchecduledMessageAsync(string id, string msg) {
            this.EditSchecduledMessageAsync(id, msg, null);
        }
        
        /// <remarks/>
        public void EditSchecduledMessageAsync(string id, string msg, object userState) {
            if ((this.EditSchecduledMessageOperationCompleted == null)) {
                this.EditSchecduledMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditSchecduledMessageOperationCompleted);
            }
            this.InvokeAsync("EditSchecduledMessage", new object[] {
                        id,
                        msg}, this.EditSchecduledMessageOperationCompleted, userState);
        }
        
        private void OnEditSchecduledMessageOperationCompleted(object arg) {
            if ((this.EditSchecduledMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditSchecduledMessageCompleted(this, new EditSchecduledMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddAllScheduledMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddAllScheduledMessage(string typeandid, string ShareMessage, string ClientTime, string scheduleddate, string scheduletime, string UserId, string PicUrl) {
            object[] results = this.Invoke("AddAllScheduledMessage", new object[] {
                        typeandid,
                        ShareMessage,
                        ClientTime,
                        scheduleddate,
                        scheduletime,
                        UserId,
                        PicUrl});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAllScheduledMessageAsync(string typeandid, string ShareMessage, string ClientTime, string scheduleddate, string scheduletime, string UserId, string PicUrl) {
            this.AddAllScheduledMessageAsync(typeandid, ShareMessage, ClientTime, scheduleddate, scheduletime, UserId, PicUrl, null);
        }
        
        /// <remarks/>
        public void AddAllScheduledMessageAsync(string typeandid, string ShareMessage, string ClientTime, string scheduleddate, string scheduletime, string UserId, string PicUrl, object userState) {
            if ((this.AddAllScheduledMessageOperationCompleted == null)) {
                this.AddAllScheduledMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAllScheduledMessageOperationCompleted);
            }
            this.InvokeAsync("AddAllScheduledMessage", new object[] {
                        typeandid,
                        ShareMessage,
                        ClientTime,
                        scheduleddate,
                        scheduletime,
                        UserId,
                        PicUrl}, this.AddAllScheduledMessageOperationCompleted, userState);
        }
        
        private void OnAddAllScheduledMessageOperationCompleted(object arg) {
            if ((this.AddAllScheduledMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAllScheduledMessageCompleted(this, new AddAllScheduledMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddComposeMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddComposeMessage(string UserId, string ProfileId, string ProfileType, string Message, string Imageurl) {
            object[] results = this.Invoke("AddComposeMessage", new object[] {
                        UserId,
                        ProfileId,
                        ProfileType,
                        Message,
                        Imageurl});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddComposeMessageAsync(string UserId, string ProfileId, string ProfileType, string Message, string Imageurl) {
            this.AddComposeMessageAsync(UserId, ProfileId, ProfileType, Message, Imageurl, null);
        }
        
        /// <remarks/>
        public void AddComposeMessageAsync(string UserId, string ProfileId, string ProfileType, string Message, string Imageurl, object userState) {
            if ((this.AddComposeMessageOperationCompleted == null)) {
                this.AddComposeMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddComposeMessageOperationCompleted);
            }
            this.InvokeAsync("AddComposeMessage", new object[] {
                        UserId,
                        ProfileId,
                        ProfileType,
                        Message,
                        Imageurl}, this.AddComposeMessageOperationCompleted, userState);
        }
        
        private void OnAddComposeMessageOperationCompleted(object arg) {
            if ((this.AddComposeMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddComposeMessageCompleted(this, new AddComposeMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllScheduledMessageforADay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllScheduledMessageforADay(string userid, string profileid, string days) {
            object[] results = this.Invoke("GetAllScheduledMessageforADay", new object[] {
                        userid,
                        profileid,
                        days});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllScheduledMessageforADayAsync(string userid, string profileid, string days) {
            this.GetAllScheduledMessageforADayAsync(userid, profileid, days, null);
        }
        
        /// <remarks/>
        public void GetAllScheduledMessageforADayAsync(string userid, string profileid, string days, object userState) {
            if ((this.GetAllScheduledMessageforADayOperationCompleted == null)) {
                this.GetAllScheduledMessageforADayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllScheduledMessageforADayOperationCompleted);
            }
            this.InvokeAsync("GetAllScheduledMessageforADay", new object[] {
                        userid,
                        profileid,
                        days}, this.GetAllScheduledMessageforADayOperationCompleted, userState);
        }
        
        private void OnGetAllScheduledMessageforADayOperationCompleted(object arg) {
            if ((this.GetAllScheduledMessageforADayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllScheduledMessageforADayCompleted(this, new GetAllScheduledMessageforADayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllScheduledMessageByDays", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllScheduledMessageByDays(string userid, string profileid, string days) {
            object[] results = this.Invoke("GetAllScheduledMessageByDays", new object[] {
                        userid,
                        profileid,
                        days});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllScheduledMessageByDaysAsync(string userid, string profileid, string days) {
            this.GetAllScheduledMessageByDaysAsync(userid, profileid, days, null);
        }
        
        /// <remarks/>
        public void GetAllScheduledMessageByDaysAsync(string userid, string profileid, string days, object userState) {
            if ((this.GetAllScheduledMessageByDaysOperationCompleted == null)) {
                this.GetAllScheduledMessageByDaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllScheduledMessageByDaysOperationCompleted);
            }
            this.InvokeAsync("GetAllScheduledMessageByDays", new object[] {
                        userid,
                        profileid,
                        days}, this.GetAllScheduledMessageByDaysOperationCompleted, userState);
        }
        
        private void OnGetAllScheduledMessageByDaysOperationCompleted(object arg) {
            if ((this.GetAllScheduledMessageByDaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllScheduledMessageByDaysCompleted(this, new GetAllScheduledMessageByDaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllScheduledMessageByMonth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllScheduledMessageByMonth(string userid, string profileid, string month) {
            object[] results = this.Invoke("GetAllScheduledMessageByMonth", new object[] {
                        userid,
                        profileid,
                        month});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllScheduledMessageByMonthAsync(string userid, string profileid, string month) {
            this.GetAllScheduledMessageByMonthAsync(userid, profileid, month, null);
        }
        
        /// <remarks/>
        public void GetAllScheduledMessageByMonthAsync(string userid, string profileid, string month, object userState) {
            if ((this.GetAllScheduledMessageByMonthOperationCompleted == null)) {
                this.GetAllScheduledMessageByMonthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllScheduledMessageByMonthOperationCompleted);
            }
            this.InvokeAsync("GetAllScheduledMessageByMonth", new object[] {
                        userid,
                        profileid,
                        month}, this.GetAllScheduledMessageByMonthOperationCompleted, userState);
        }
        
        private void OnGetAllScheduledMessageByMonthOperationCompleted(object arg) {
            if ((this.GetAllScheduledMessageByMonthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllScheduledMessageByMonthCompleted(this, new GetAllScheduledMessageByMonthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllSentMessageDetailsForCustomrange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllSentMessageDetailsForCustomrange(string userid, string profileid, string sdate, string ldate) {
            object[] results = this.Invoke("GetAllSentMessageDetailsForCustomrange", new object[] {
                        userid,
                        profileid,
                        sdate,
                        ldate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSentMessageDetailsForCustomrangeAsync(string userid, string profileid, string sdate, string ldate) {
            this.GetAllSentMessageDetailsForCustomrangeAsync(userid, profileid, sdate, ldate, null);
        }
        
        /// <remarks/>
        public void GetAllSentMessageDetailsForCustomrangeAsync(string userid, string profileid, string sdate, string ldate, object userState) {
            if ((this.GetAllSentMessageDetailsForCustomrangeOperationCompleted == null)) {
                this.GetAllSentMessageDetailsForCustomrangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSentMessageDetailsForCustomrangeOperationCompleted);
            }
            this.InvokeAsync("GetAllSentMessageDetailsForCustomrange", new object[] {
                        userid,
                        profileid,
                        sdate,
                        ldate}, this.GetAllSentMessageDetailsForCustomrangeOperationCompleted, userState);
        }
        
        private void OnGetAllSentMessageDetailsForCustomrangeOperationCompleted(object arg) {
            if ((this.GetAllSentMessageDetailsForCustomrangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSentMessageDetailsForCustomrangeCompleted(this, new GetAllSentMessageDetailsForCustomrangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllScheduledDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllScheduledDetails() {
            object[] results = this.Invoke("GetAllScheduledDetails", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllScheduledDetailsAsync() {
            this.GetAllScheduledDetailsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllScheduledDetailsAsync(object userState) {
            if ((this.GetAllScheduledDetailsOperationCompleted == null)) {
                this.GetAllScheduledDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllScheduledDetailsOperationCompleted);
            }
            this.InvokeAsync("GetAllScheduledDetails", new object[0], this.GetAllScheduledDetailsOperationCompleted, userState);
        }
        
        private void OnGetAllScheduledDetailsOperationCompleted(object arg) {
            if ((this.GetAllScheduledDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllScheduledDetailsCompleted(this, new GetAllScheduledDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSentMessageCountByProfileIdAndUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSentMessageCountByProfileIdAndUserId(string UserId, string ProfileIds) {
            object[] results = this.Invoke("GetSentMessageCountByProfileIdAndUserId", new object[] {
                        UserId,
                        ProfileIds});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSentMessageCountByProfileIdAndUserIdAsync(string UserId, string ProfileIds) {
            this.GetSentMessageCountByProfileIdAndUserIdAsync(UserId, ProfileIds, null);
        }
        
        /// <remarks/>
        public void GetSentMessageCountByProfileIdAndUserIdAsync(string UserId, string ProfileIds, object userState) {
            if ((this.GetSentMessageCountByProfileIdAndUserIdOperationCompleted == null)) {
                this.GetSentMessageCountByProfileIdAndUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSentMessageCountByProfileIdAndUserIdOperationCompleted);
            }
            this.InvokeAsync("GetSentMessageCountByProfileIdAndUserId", new object[] {
                        UserId,
                        ProfileIds}, this.GetSentMessageCountByProfileIdAndUserIdOperationCompleted, userState);
        }
        
        private void OnGetSentMessageCountByProfileIdAndUserIdOperationCompleted(object arg) {
            if ((this.GetSentMessageCountByProfileIdAndUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSentMessageCountByProfileIdAndUserIdCompleted(this, new GetSentMessageCountByProfileIdAndUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSentMessageCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSentMessageCount(string Userid, string profileids, string days) {
            object[] results = this.Invoke("GetSentMessageCount", new object[] {
                        Userid,
                        profileids,
                        days});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSentMessageCountAsync(string Userid, string profileids, string days) {
            this.GetSentMessageCountAsync(Userid, profileids, days, null);
        }
        
        /// <remarks/>
        public void GetSentMessageCountAsync(string Userid, string profileids, string days, object userState) {
            if ((this.GetSentMessageCountOperationCompleted == null)) {
                this.GetSentMessageCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSentMessageCountOperationCompleted);
            }
            this.InvokeAsync("GetSentMessageCount", new object[] {
                        Userid,
                        profileids,
                        days}, this.GetSentMessageCountOperationCompleted, userState);
        }
        
        private void OnGetSentMessageCountOperationCompleted(object arg) {
            if ((this.GetSentMessageCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSentMessageCountCompleted(this, new GetSentMessageCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClickCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetClickCount(string UserId, string profileids, string days) {
            object[] results = this.Invoke("GetClickCount", new object[] {
                        UserId,
                        profileids,
                        days});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetClickCountAsync(string UserId, string profileids, string days) {
            this.GetClickCountAsync(UserId, profileids, days, null);
        }
        
        /// <remarks/>
        public void GetClickCountAsync(string UserId, string profileids, string days, object userState) {
            if ((this.GetClickCountOperationCompleted == null)) {
                this.GetClickCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClickCountOperationCompleted);
            }
            this.InvokeAsync("GetClickCount", new object[] {
                        UserId,
                        profileids,
                        days}, this.GetClickCountOperationCompleted, userState);
        }
        
        private void OnGetClickCountOperationCompleted(object arg) {
            if ((this.GetClickCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClickCountCompleted(this, new GetClickCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UploadFileCompletedEventHandler(object sender, UploadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ADDScheduledMessageCompletedEventHandler(object sender, ADDScheduledMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ADDScheduledMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ADDScheduledMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddGroupScheduleMessagesCompletedEventHandler(object sender, AddGroupScheduleMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGroupScheduleMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGroupScheduleMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateScheduledMessageCompletedEventHandler(object sender, UpdateScheduledMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateScheduledMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateScheduledMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAllScheduledMessageByUserIdCompletedEventHandler(object sender, GetAllScheduledMessageByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllScheduledMessageByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllScheduledMessageByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAllUnSentMessagesOfUserCompletedEventHandler(object sender, GetAllUnSentMessagesOfUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUnSentMessagesOfUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUnSentMessagesOfUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAllUnSentMessagesAccordingToGroupCompletedEventHandler(object sender, GetAllUnSentMessagesAccordingToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUnSentMessagesAccordingToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUnSentMessagesAccordingToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetWooQueueMessageByUserIdCompletedEventHandler(object sender, GetWooQueueMessageByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWooQueueMessageByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWooQueueMessageByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetScheduleMessageByMessageIdCompletedEventHandler(object sender, GetScheduleMessageByMessageIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleMessageByMessageIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleMessageByMessageIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void CheckMessageExistsAtTimeCompletedEventHandler(object sender, CheckMessageExistsAtTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckMessageExistsAtTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckMessageExistsAtTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAllMessagesOfUserCompletedEventHandler(object sender, GetAllMessagesOfUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMessagesOfUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMessagesOfUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateScheduledMessageByMsgIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getScheduledMessageByProfileTypeCompletedEventHandler(object sender, getScheduledMessageByProfileTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getScheduledMessageByProfileTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getScheduledMessageByProfileTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getAllSentMessageDetailsCompletedEventHandler(object sender, getAllSentMessageDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllSentMessageDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllSentMessageDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetSociaoQueueMessageByUserIdAndGroupIdCompletedEventHandler(object sender, GetSociaoQueueMessageByUserIdAndGroupIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSociaoQueueMessageByUserIdAndGroupIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSociaoQueueMessageByUserIdAndGroupIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteSchecduledMessageCompletedEventHandler(object sender, DeleteSchecduledMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSchecduledMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSchecduledMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void EditSchecduledMessageCompletedEventHandler(object sender, EditSchecduledMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditSchecduledMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditSchecduledMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddAllScheduledMessageCompletedEventHandler(object sender, AddAllScheduledMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAllScheduledMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAllScheduledMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddComposeMessageCompletedEventHandler(object sender, AddComposeMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddComposeMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddComposeMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAllScheduledMessageforADayCompletedEventHandler(object sender, GetAllScheduledMessageforADayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllScheduledMessageforADayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllScheduledMessageforADayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAllScheduledMessageByDaysCompletedEventHandler(object sender, GetAllScheduledMessageByDaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllScheduledMessageByDaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllScheduledMessageByDaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAllScheduledMessageByMonthCompletedEventHandler(object sender, GetAllScheduledMessageByMonthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllScheduledMessageByMonthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllScheduledMessageByMonthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAllSentMessageDetailsForCustomrangeCompletedEventHandler(object sender, GetAllSentMessageDetailsForCustomrangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSentMessageDetailsForCustomrangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSentMessageDetailsForCustomrangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAllScheduledDetailsCompletedEventHandler(object sender, GetAllScheduledDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllScheduledDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllScheduledDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetSentMessageCountByProfileIdAndUserIdCompletedEventHandler(object sender, GetSentMessageCountByProfileIdAndUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSentMessageCountByProfileIdAndUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSentMessageCountByProfileIdAndUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetSentMessageCountCompletedEventHandler(object sender, GetSentMessageCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSentMessageCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSentMessageCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetClickCountCompletedEventHandler(object sender, GetClickCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClickCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClickCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591